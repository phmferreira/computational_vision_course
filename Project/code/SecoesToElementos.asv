%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%% Visão Computacional %%%%%%%%%%%%%%%%%%%
%%%%%%%% Projeto 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%% Aluno: Paulo Henrique Muniz Ferreira %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Algoritmo agregação de seções de rachaduras
% Descrição na subseção 4.2 do artigo de ref.

% Esse procedimento vai identificar e transformar as seções de rachaduras
% em elementos de rachaduras

function [VetorElementos] = SecoesToElementos(Imagem)

% LEMBRA DE SALVAR AS IMAGENS

% ---------Seção de testes---------
% Figura do exemplo 3
%exemplo1 = imread('imagens\exemplo1','png'); % Abre a imagem
%Imagem = rgb2gray(exemplo1);
%imshow(Imagem);
% ---------------------------------

% 1º passo - Binarizando a imagem
ImagemBinarizada = AgregandoSecaoRachadura(Imagem);
% Salvando imagem binarizada
img = imshow(ImagemBinarizada);
saveas(img, 'imagem_binarizada_ex1.jpg', 'jpg');

% 2º passo - Afinamento das regiões de rachaduras
ImagemEsqueleto = alg_hilditch(ImagemBinarizada);
% Salvando imagem afinada
img = imshow(ImagemEsqueleto);
saveas(img, 'imagem_afinada_ex1.jpg', 'jpg');

% 3º passo - remoção de cross-points (pontos com junção de 3 ou mais
% pontos)
ImagemSemCrossPoints = RemoverCrossPoints(ImagemEsqueleto);
% Salvando imagem sem cross-points
img = imshow(ImagemSemCrossPoints);
saveas(img, 'imagem_binarizada_ex1.jpg', 'jpg');

% 4º passo - Transformação de seções em elementos de rachaduras
VetorElementos = CriarElementosRachadura(ImagemSemCrossPoints, Imagem);